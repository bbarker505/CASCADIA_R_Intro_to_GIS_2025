---
title: "Introduction to GIS and mapping in R"
subtitle: "Cascadia R Conference 2025"
author: "Brittany Barker"
date: 6/21/25
format: revealjs
embed-resources: true
---

---
format: 
  revealjs:
    slide-number: c/t
    width: 1600
    height: 900
    theme: simple
    echo: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(here)
```

## Your instructors: Brittany Barker

::::: columns
::: {.column width="40%"}
```{r, echo = FALSE, out.width = "500px"}
knitr::include_graphics(here("images", "intro_me.jpg"))
```
:::

::: {.column width="60%"}
**Current position**\
- Asst. Research Professor, OSU\
<br/> **Research interests**\
- Modeling, ecology, biogeography, conservation\
<br/> **Hobbies**\
- Running, hiking, biking, moving!\
- Gardening, native habitat restoration\
- Artistic and creative endeavors\
<br/> **R Community**\
- Co-organize "Aggregate" meetups\
- Co-organize Cascadia R Conference
:::
:::::

## Your instructors: Carrie Preston

::::: columns
::: {.column width="40%"}
```{r, echo = FALSE, out.width = "500px"}
knitr::include_graphics(here("images", "Carrie2.jpg"))
```
:::

::: {.column width="60%"}
**Current position**\
- Research Associate, OSU\
<br/> **Research interests**\
- Entomology, biological control, insect rearing\
<br/> **Hobbies**\
- Photography, dungeons and dragons, gardening, walking her cats\
:::
:::::

## Outline of workshop

-   \~25 min: introductory lecture\
-   Parts 1-2: Introduction to sf package\
-   Part 3: Mapping raster and vector data (ggplot2)\
-   Part 4: Mapping raster and vector date (leaflet)\

```{r, out.width = "650px", echo=FALSE, fig.align="left", fig.cap="Source: Zia Ahmed"}
knitr::include_graphics(here("images", "Geospatial_R.png"))
```

## Elements of Geographic Information System (GIS)

```{r, out.width = "650px", echo=FALSE, fig.align="center", fig.cap="Source: Mierzejowska & Pomyko 2019"}
knitr::include_graphics(here("images", "GIS.png"))
```

## Why use R for GIS?

::::: columns
::: {.column width="50%"}
-   **Advantages**

    -   It's *FREE*!!!\
    -   Automate and repeat tasks (faster)\
    -   Easier to make reproducible workflow\
    -   Extend functionality\

```{r, out.width = "650px", echo=FALSE, fig.align="left", fig.cap="Source: Aleks Buczkowski 2023"}
knitr::include_graphics(here("images", "Why-is-ArcGIS-So-Expensive.png"))
```
:::

::: {.column width="50%"}
-   **Disadvantages**

    -   Steep learning curve\
    -   Sometimes harder to quickly look at data\

```{r, out.width = "400px", echo=FALSE, fig.align="left"}
knitr::include_graphics(here("images", "programmer_meme.jpg"))
```
:::
:::::

## Types of spatial features: vector

-   Uses points and/or line segments to identify locations on earth

```{r, out.width = "650px", echo=FALSE, fig.align="center", fig.cap="Different types of vectors (Source: Jakub Nowosad)"}
knitr::include_graphics(here("images", "vector.png"))
```

## R packages for working with vectors

-   `sf` (simple features)
-   More convenient and flexible than older `sp` package\
-   Integration with the tidyverse\
-   Emphasis on the spatial geometry of real world objects

::::: columns
::: {.column width="50%"}
```{r, echo = FALSE, out.width = "1000px", fig.align="center"}
knitr::include_graphics(here("images", "sf-relations.png"))
```
:::

::: {.column width="50%"}
```{r, echo = FALSE, out.width = "650px", fig.align="center", fig.cap = "Source: Jakub Nowosad"}
knitr::include_graphics(here("images", "sf-area.png"))
```
:::
:::::

## Example functions in `sf`

```{r, echo = FALSE, out.width = "1000px"}
knitr::include_graphics(here("images", "sf_concept_map.png"))
```

## Types of spatial features: raster

-   Gridded data where each pixel (cell) is associated with a specific
    geographical location\
-   Commonly used to represent spatially continuous data\
-   Data can also be categorical\

::::: columns
::: {.column width="50%"}
```{r, out.width = "650px", echo=FALSE, fig.align="left"}
knitr::include_graphics(here("images", "forest_cover.jpg"))
```
:::

::: {.column width="50%"}
```{r, echo = FALSE, out.width = "700px", fig.cap="Source: Jakub Nowosad"}
knitr::include_graphics(here("images", "cont_vs_cat.png"))
```
:::
:::::

## Vector vs. raster

::::: columns
::: {.column width="50%"}
Multi-polygon: provinces of Spain

```{r, out.width = "1000px", echo=FALSE, fig.cap="Source: Paula Moraga"}
knitr::include_graphics(here("images", "pol_v_rast1.png"))
```
:::

::: {.column width="50%"}
Raster: average annual temperature in Spain

```{r, echo = FALSE, out.width = "1000px"}
knitr::include_graphics(here("images", "pol_v_rast2.png"))
```
:::
:::::

## Types of spatial features: raster

-   Multi-layered rasters often called raster stacks\
    -   Time (day of year, etc.)\
    -   Different variables\

::::: columns
::: {.column width="50%"}
```{r, echo = FALSE, out.width = "700px", fig.cap="Source: Edzer Pebesama"}
knitr::include_graphics(here("images", "cube1.png"))
```
:::

::: {.column width="50%"}
```{r, echo = FALSE, out.width = "600px"}
knitr::include_graphics(here("images", "layers.png"))
```
:::
:::::

## R packages for working with rasters

::::: columns
::: {.column width="50%"}
-   `terra` (successor of `raster`)\
    -   Create, read/write, manipulate rasters\
    -   Can also work with vector data\
    -   Extensive documentation\

```{r, echo = FALSE, out.width = "350px", fig.align="center"}
knitr::include_graphics(here("images", "terra.png"))
```
:::

::: {.column width="50%"}
-   Hundreds of functions\
    -   Spatial statistics and modeling\
    -   Access and extract cell values\
    -   Plot rasters and vectors\

```{r, echo = FALSE, out.width = "750px", fig.align="center"}
knitr::include_graphics(here("images", "spatraster.png"))
```
:::
:::::

## R packages for working with rasters

-   `stars`(spatiotemporal arrays)\
    -   Has a few abilities lacking in `terra` (e.g., non-regular
        shapes)\
    -   Many `sf` functions work with stars objects\
    -   Not as well documented\

```{r, echo = FALSE, fig.align = "left", out.width = "800px", fig.cap="Source: Edzer Pebesama"}
knitr::include_graphics(here("images", "stars_raster_data.png"))
```

## Layering

-   Oftentimes we want to make maps with multiple spatial features

```{r, out.width = "650px", echo=FALSE, fig.align="center"}
knitr::include_graphics(here("images", "layering.png"))
```

## In comes `ggplot`

-   Uses layered approach to create graphics (The Grammar of Graphics)\
-   You provide the data, tell `ggplot2` how to map variables to
    aesthetics, what graphical elements to use, and it takes care of the
    details\

```{r, echo = FALSE, out.width = "800px", fig.cap="Source: R for the rest of us"}
knitr::include_graphics(here("images", "grammar-of-graphics.png"))
```

## In comes `ggplot`

-   `ggplot2` can plot all sorts of data, including rasters and vectors

```{r, echo = FALSE, out.width = "800px",  fig.align="left", fig.cap="Source: www.icertglobal.com"}
knitr::include_graphics(here("images", "ggplot_plots.png"))
```

## `tidyterra`: integrates spatial data with `ggplot`

-   Supports a variety of geospatial formats (vector and raster)\
-   Leverages `dplyr`-like functions (filtering, summarizing, joining,
    etc.)\
-   Provides `geoms` for plotting in `ggplot2`\

```{r, echo = FALSE, out.width = "1000px", fig.align="left", fig.cap="Source: Joachim Schork"}
knitr::include_graphics(here("images", "tidyterra_dighernan.jpg"))
```

## Example: a ggplot combining raster and vectors

-   Map of the phenology and potential distribution for invasive emerald
    ash borer\
-   What are the vectors vs. rasters in this map?\

::::: columns
::: {.column width="75%"}
```{r, echo = FALSE, out.width = "1100px"}
knitr::include_graphics(here("images", "EAB_map.png"))
```
:::

::: {.column width="25%"}
```{r, echo = FALSE, out.width = "250px", fig.cap="Source: Barker et al. (2023) *Front. Insect Sci.*"}
knitr::include_graphics(here("images", "emerald-ash-borer-on-leaf.png"))
```
:::
:::::

## Interactive web maps using `leaflet`

-   Create dynamic and interactive maps using Leaflet JavaScript library\
-   Used for maps in web pages, including Shiny web apps\

```{r, echo = FALSE, out.width = "800px",  fig.align="left", fig.cap="Source: https://i.sstatic.net/O2DAV.gif"}
knitr::include_graphics(here("images", "leaflet_shiny_quakes.gif"))
```

## Coordinate reference system (CRS)

-   Coordinate system: X, Y grid upon which data is overlaid\
-   Units: horizontal & vertical units of grid (e.g., km, miles)\
-   Datum: defines origin used to place the coordinate system in space\
-   Projection: equation used to flatten objects to 2D surface\

```{r, echo = FALSE, out.width = "700px", fig.align = "left", fig.cap = "Source: Bill Huber, https://www.directionsmag.com"}
knitr::include_graphics(here("images", "datum_v_proj.png"))
```

## Why is the CRS important?

-   Framework for precisely measuring locations on earth's surface\
-   Errors or mistakes occur when using inconsistent CRS\
-   For example, mismatched features and incorrect distance measurements\

```{r, echo = FALSE, out.width = "1000px", fig.align="left", fig.cap = "Source: opennews.org"}
knitr::include_graphics(here("images", "us_projections.jpg"))
```
